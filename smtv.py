#!/usr/bin/env python*
# -*- coding: UTF-8 -*-


import requests
import csv
import sys
import itertools
from pandas.io.json import json_normalize


def get_lgtm_project_data(repository_tail):
    # Get lgtm project level data given a repository URL tail like:
    # ('organization/repository_name')
    lgtm_projects_uri = 'https://lgtm.com/api/v1.0/projects/g/'
    r = requests.get(lgtm_projects_uri + repository_tail)
    if r.status_code == 200:
        return r.json()
    else:
        return 0


def get_lgtm_analysis(lgtm_project_id):
    # https://lgtm.com/api/v1.0/analyses/{project-id}/commits/{commit-id}
    lgtm_analyses_uri = 'https://lgtm.com/api/v1.0/analyses/'
    r = requests.get(lgtm_analyses_uri + str(lgtm_project_id) + '/commits/latest')
    if r.status_code == 200:
        return r.json()
    else:
        return 0


def flatten_json(y):
    out = {}

    def flatten(x, name=''):
        if type(x) is dict:
            for a in x:
                flatten(x[a], name + a + '_')
        elif type(x) is list:
            i = 0
            for a in x:
                flatten(a, name + str(i) + '_')
                i += 1
        else:
            out[name[:-1]] = x

    flatten(y)
    return out


def main():
    # For each repository longtail ('organization/repository_name') try to get # project analysis data from LGTM
    repository_list = ['indiana-university/kumo', 'indiana-university/rivet-source', 'indiana-university/javamail-smime-transport', 'indiana-university/rivet-switch', 'indiana-university/rivet-collapsible', 'indiana-university/rivet-icons', 'indiana-university/rivet-react', 'indiana-university/rivet-add-on-boilerplate', 'indiana-university/rivet-emmet', 'indiana-university/rivet-shell', 'indiana-university/status-iu-app', 'indiana-university/itpeople-app', 'indiana-university/itpeople-functions', 'indiana-university/rivetizer', 'indiana-university/indiana-university.github.io', 'indiana-university/status-iu-functions', 'indiana-university/iu-framework-custom-section-boilerplate', 'indiana-university/docker-swarm-conformity-monkey', 'indiana-university/rivet-docs', 'indiana-university/conduit', 'indiana-university/copyright-notice-attacher', 'indiana-university/ccore', 'indiana-university/rivet-kbdoc-styles', 'indiana-university/rivet-jekyll-theme', 'indiana-university/puppet-duo_unix', 'indiana-university/rivet-issue-bot', 'indiana-university/when-elements', 'indiana-university/rivet-datepicker', 'indiana-university/rivet-add-on-boilerplate-lite', 'indiana-university/puppet-aide', 'indiana-university/rivet-stylelint-config', 'indiana-university/rivet-eslint-config', 'indiana-university/status-api-php', 'indiana-university/iukb-api-php', 'indiana-university/iukb-api-doc-content-php', 'indiana-university/udmc-box-automation', 'indiana-university/rivet-rfcs', 'indiana-university/puppet-forge-api-php', 'indiana-university/box-migration-tools', 'indiana-university/desktop', 'indiana-university/kumo', 'indiana-university/rivet-source', 'indiana-university/javamail-smime-transport', 'indiana-university/rivet-switch', 'indiana-university/rivet-collapsible', 'indiana-university/rivet-icons', 'indiana-university/rivet-react', 'indiana-university/rivet-add-on-boilerplate', 'indiana-university/rivet-emmet', 'indiana-university/rivet-shell', 'indiana-university/status-iu-app', 'indiana-university/itpeople-app', 'indiana-university/itpeople-functions', 'indiana-university/rivetizer', 'indiana-university/indiana-university.github.io', 'indiana-university/status-iu-functions', 'indiana-university/iu-framework-custom-section-boilerplate', 'indiana-university/docker-swarm-conformity-monkey', 'indiana-university/rivet-docs', 'indiana-university/conduit', 'indiana-university/copyright-notice-attacher', 'indiana-university/ccore', 'indiana-university/rivet-kbdoc-styles', 'indiana-university/rivet-jekyll-theme', 'indiana-university/puppet-duo_unix', 'indiana-university/rivet-issue-bot', 'indiana-university/when-elements', 'indiana-university/rivet-datepicker', 'indiana-university/rivet-add-on-boilerplate-lite', 'indiana-university/puppet-aide', 'indiana-university/rivet-stylelint-config', 'indiana-university/rivet-eslint-config', 'indiana-university/status-api-php', 'indiana-university/iukb-api-php', 'indiana-university/iukb-api-doc-content-php', 'indiana-university/udmc-box-automation', 'indiana-university/rivet-rfcs', 'indiana-university/puppet-forge-api-php', 'indiana-university/box-migration-tools', 'indiana-university/desktop', 'indiana-university/box-migration-tools', 'indiana-university/itpeople-app', 'indiana-university/rivet-source', 'pamplemouse9000/AI4Cyber-Team3','shenweichen/DeepCTR/', 'CommanderOtto/asp.net-project', 'casitchai2398/C-Project_FitnessClub', 'suyashkhemka/cummins-project', 'chrisperez8993/hello-world', 'casitchai2398/Website-Setup-for-Study-Abroad-Program', 'CommanderOtto/asp.net-project', 'casitchai2398/C-Project_FitnessClub', 'suyashkhemka/cummins-project', 'chrisperez8993/hello-world', 'casitchai2398/Website-Setup-for-Study-Abroad-Program', 'sudhanshu-15/sunapsisConference2018Flutter', 'jaykhandare/A-fast-Lock-Free-Internal-Binary-Search-Tree', 'SciGaP/CIRC-Center-Website', 'iu-parfunc/GADTRemover', 'saskamegaprogrammist/IU9-educational-tasks', 'cns-iu/cns-iu.github.io', 'opensciencegrid/reports', 'abidKiller/IUT-EDUCOM', 'cello4u/IUBA-Edu', 'ahorne11/portfolio', 'asadana/P632-InsecurePay', 'Tattvum/edutvum-iupac', 'basham/conduit-media', 'Antcliff/curriculum.medicine.iu.edu', 'pxa/pxa.iu.edu', 'ACarter50/https-github.iu.edu', 'gmontanez/libraries-iub-edu', 'abalsada/github.iu.edu', 'sukhirsaouda/srsaouda-iu.edu', 'zseymour/edu.iup.chem.inventory', 'cns-iu/iotw.cns.iu.edu', 'AddysonHahn/allhahn-iu.edu', 'jolamar/mobile.iu.edu', 'cns-iu/ccfws.cns.iu.edu', 'cschoder/edu-iu-acm-uml-interactions-', 'jayveemeniado/iu.edu.ph.github.io', 'nvalentinis-git/edu-iua-embebed-system-tp', 'www-iub-edu-bd/www-iub-edu-bd.github.io', 'myriamyoung/wcms-framework', 'YalingZheng/LatestGratiaGold', 'basham/adrx-advisees', 'nickderf/3d-Platformer', 'zcslab/ICTD', 'brainlife/app-mrtrix3-5tt', 'brainlife/app-mrtrix3-csd', 'YalingZheng/xsedereport', 'ravencourse/ThisIsNotADrill', 'aaronburatti/indianapublicmedia', 'wang502/wfqueue', 'Jmizraji/GroupProjectWebsite', 'Agoengwew/wew', 'CommanderOtto/asp.net-project', 'casitchai2398/C-Project_FitnessClub', 'suyashkhemka/cummins-project', 'chrisperez8993/hello-world', 'casitchai2398/Website-Setup-for-Study-Abroad-Program', 'CommanderOtto/asp.net-project', 'casitchai2398/C-Project_FitnessClub', 'suyashkhemka/cummins-project', 'chrisperez8993/hello-world', 'casitchai2398/Website-Setup-for-Study-Abroad-Program', 'sudhanshu-15/sunapsisConference2018Flutter', 'jaykhandare/A-fast-Lock-Free-Internal-Binary-Search-Tree', 'SciGaP/CIRC-Center-Website', 'iu-parfunc/GADTRemover', 'saskamegaprogrammist/IU9-educational-tasks', 'cns-iu/cns-iu.github.io', 'opensciencegrid/reports', 'abidKiller/IUT-EDUCOM', 'cello4u/IUBA-Edu', 'ahorne11/portfolio', 'asadana/P632-InsecurePay', 'Tattvum/edutvum-iupac', 'basham/conduit-media', 'Antcliff/curriculum.medicine.iu.edu', 'pxa/pxa.iu.edu', 'ACarter50/https-github.iu.edu', 'gmontanez/libraries-iub-edu', 'abalsada/github.iu.edu', 'sukhirsaouda/srsaouda-iu.edu', 'zseymour/edu.iup.chem.inventory', 'cns-iu/iotw.cns.iu.edu', 'AddysonHahn/allhahn-iu.edu', 'jolamar/mobile.iu.edu', 'cns-iu/ccfws.cns.iu.edu', 'cschoder/edu-iu-acm-uml-interactions-', 'jayveemeniado/iu.edu.ph.github.io', 'nvalentinis-git/edu-iua-embebed-system-tp', 'www-iub-edu-bd/www-iub-edu-bd.github.io', 'myriamyoung/wcms-framework', 'YalingZheng/LatestGratiaGold', 'basham/adrx-advisees', 'nickderf/3d-Platformer', 'zcslab/ICTD', 'brainlife/app-mrtrix3-5tt', 'brainlife/app-mrtrix3-csd', 'YalingZheng/xsedereport', 'ravencourse/ThisIsNotADrill', 'aaronburatti/indianapublicmedia', 'wang502/wfqueue', 'Jmizraji/GroupProjectWebsite', 'Agoengwew/wew', 'FountainJS/fountain-generator', 'BanManagement/BanManager', 'scijs/save-pixels', 'aol/cyclops', 'gruntjs/grunt-contrib-less', 'bigcompany/resource', 'wprl/baucis', 'fex-team/fis-kernel', 'linaGirl/ee-types', 'cowboy/node-globule', 'Ordinastie/MalisisCore', 'gruntjs/grunt-contrib-less', 'automatictester/lightning', 'cternes/openkeepass', 'joyent/node-http-signature', 'pkrumins/node-tree-kill']

    with open('lgtm.csv', 'w', newline='') as csvfile:
        fieldnames = ['id', 'url-identifier', 'name', 'url', 'languages_0_language', 'languages_0_status', 'languages_0_alerts', 'languages_0_lines', 'languages_0_commit-id', 'languages_0_commit-date', 'languages_0_analysis-date', 'languages_0_grade']
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        writer.writeheader()
        for repo in repository_list:
            print('Working on...' + repo + '\n')
            lgtm_project_data = get_lgtm_project_data(repo)
            if lgtm_project_data != 0:
                # unpack dictionary, create new flat dictionary that is ready for csv writer
                flat = flatten_json(lgtm_project_data)
                writer.writerow(flat)

    print('Done!')


if __name__ == "__main__":
    # execute only if run as a script
    main()
    
